mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
# Parameters definitions for the random walk.
lambda <- 0.9836
theta <- 50
ntrials <- 300
mu_start_1 <- 80
mu_start_2 <- 60
mu_start_3 <- 40
mu_start_4 <- 20
mu <- matrix(data=NA, nrow=ntrials, ncol=4)
payoff <- matrix(data=NA, nrow=ntrials, ncol=4)
mu[1, 1] <- mu_start_1
mu[1, 2] <- mu_start_2
mu[1, 3] <- mu_start_3
mu[1, 4] <- mu_start_4
for (cond in 1:4) {
for (i in 2:ntrials) {
mu[i, cond] <- lambda * mu[i-1, cond] + (1 - lambda) * theta + rnorm(1, 0, 2.8)
}
for (i in 1:ntrials) {
payoff[i, cond] <- round(rnorm(1, mu[i, cond], 4))
}
}
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = 'l', ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = 'l', lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = 'l', lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = 'l', lwd = 2, col = "gray")
styler:::style_selection()
date()
library("hBayesDM")
output <- bandit4arm2_kalman_filter(
data = "example",
niter = 500,
nwarmup = 100,
nchain = 1,
ncore = 4
)
?bandit4arm2_kalman_filter
output <- bandit4arm2_kalman_filter(
data = "example"[1:600, ],
niter = 500,
nwarmup = 100,
nchain = 1,
ncore = 4
)
foo <- hBayesDM:::example
ls(loadNamespace("hBayesDM"))
output <- bandit4arm2_kalman_filter(
data = "example",
niter = 500,
nwarmup = 100,
nchain = 1,
ncore = 4
)
attributes(output)
output$rawdata
output <- bandit4arm2_kalman_filter(
data = "example",
niter = 1000,
nwarmup = 500,
nchain = 1,
ncore = 4
)
output <- bandit4arm2_kalman_filter(
data = "example",
nchain = 4,
ncore = 4
)
warnings()
?bandit4arm_4par
output <- bandit4arm_4par(
data = "example", niter = 2000, nwarmup = 1000, nchain = 4, ncore = 4
)
output <- bandit4arm_4par(
data = "example", niter = 100, nwarmup = 100, nchain = 1, ncore = 4
)
output <- bandit4arm_4par(
data = "example", niter = 2000, nwarmup = 1000, nchain = 1, ncore = 4
)
plot(output, type = "trace")
rhat(output)
plot(output)
printFit(output)
attributes(output)
foo <- output$rawdata
head(foo)
output2 <- bandit4arm_2par_lapse(
data = "example", niter = 2000, nwarmup = 1000, nchain = 4, ncore = 4)
output2 <- bandit4arm_2par_lapse(
data = "example",
niter = 2000,
nwarmup = 1000,
nchain = 1,
ncore = 4
)
plot(output2)
foo <- output2$rawdata
head(foo)
output3 <- bandit4arm2_kalman_filter(
data = "example", niter = 2000, nwarmup = 1000, nchain = 2, ncore = 4)
head(output3$rawdata)
output3 <- bandit4arm2_kalman_filter(
data = "example", niter = 2000, nwarmup = 1000, nchain = 4, ncore = 4)
head(output3$rawdata)
reward_gauss <- output3$rawdata
output4 <- bandit4arm2_kalman_filter(
data = reward_gauss[1:600, ], niter = 2000, nwarmup = 1000, nchain = 4, ncore = 4)
?bandit4arm_2par_lapse
output <- bandit4arm_2par_lapse(
data = reward_gauss[1:600, ], niter = 2000, nwarmup = 1000, nchain = 4, ncore = 4)
head(reward_gauss)
output <- bandit4arm_lapse(
data = "example", niter = 1000, nwarmup = 500, nchain = 1, ncore = 4)
output <- bandit4arm(
data = "example", niter = 1000, nwarmup = 500, nchain = 1, ncore = 4)
output <- bandit4arm_4par(
data = "example", niter = 1000, nwarmup = 500, nchain = 1, ncore = 4)
plot(output)
foo <- output$rawdata
head(foo)
foo[1:100, ]
# Replicates Figure 1b of Daw et al. (2006):
plot(1:ntrials, payoff[, 1], type = "l", ylim = c(0, 100), lwd = 2, col = "red")
points(1:ntrials, payoff[, 2], type = "l", lwd = 2, col = "blue")
points(1:ntrials, payoff[, 3], type = "l", lwd = 2, col = "yellow")
points(1:ntrials, payoff[, 4], type = "l", lwd = 2, col = "gray")
?bandit4arm_4par
printFit(output)
p <- 0.3
p
p^3 * (1 - p)^(10 - 3)
y1 <- p^3 * (1 - p)^(10 - 3)
y1
p <- 0.1
y2 <- p^3 * (1 - p)^(10 - 3)
y2
p <- 0.8
y3 <- p^3 * (1 - p)^(10 - 3)
y3
plot(c(0.3, 0.1, 0.8), c(y1, y2, y3))
p <- seq(0, 1, length.out = 100)
p
like <- function(p) {
p^3 * (1 - p)^(10 - 3)
}
0.002223566
like(0.3)
y <- like(p)
y
plot(p, y, type = 'l')
points(0.3, y1)
yy <- dbinom(3, 10, p)
plot(p, yy, type = 'l')
like <- function(p) {
p^3 * (1 - p)^(10 - 3)
}
y <- like(p)
plot(p, y, type = 'l')
yy <- dbinom(3, 10, p)
plot(p, yy, type = 'l')
0:10
yyy <- dbinom(0:10, 10, 0.5)
yyy
plot(0:10, yyy)
sum(yyy)
exp(26)
exp(-26)
library("R.matlab")
setwd("~/Dropbox/papers/neurOptimal/matlab/SST")
dir()
data <- readMat('StopSignal_99.dat')
dat <- readMat("StopSignal_99.dat")
dat <- read.table("StopSignal_99.dat")
dat <- read.table("StopSignal_99.txt", header = TRUE)
head(dat)
dat$trial
plot(dat$trial, dat$DELTA, type = 'l')
plot(dat$trial, dat$SSD, type = 'l')
dat <- read.table("StopSignalExp_322.txt", header = TRUE)
plot(dat$trial, dat$SSD, type = 'l')
plot(dat$trial, dat$DELTA, type = 'l')
dat <- read.table("StopSignalExp_323.txt", header = TRUE)
plot(dat$trial, dat$DELTA, type = 'l')
plot(dat$trial, dat$SSD, type = 'l')
plot(dat$trial, dat$DELTA, type = 'l')
dat <- read.table("StopSignalExp_324.txt", header = TRUE)
plot(dat$trial, dat$DELTA, type = 'l')
plot(dat$trial, dat$SSD, type = 'l')
dat <- read.table("StopSignal_99.txt", header = TRUE)
plot(dat$trial, dat$SSD, type = 'l')
setwd("~/Dropbox/papers/neurOptimal/matlab/SST")
getwd()
